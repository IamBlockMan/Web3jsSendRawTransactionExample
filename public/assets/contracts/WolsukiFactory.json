{
  "contractName": "WolsukiFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalPayments",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawPayments",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fixtures",
      "outputs": [
        {
          "name": "closedAt",
          "type": "uint256"
        },
        {
          "name": "endedAt",
          "type": "uint256"
        },
        {
          "name": "externalId",
          "type": "string"
        },
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "ended",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "queryPlayers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "queryBetClaimed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "name": "host",
          "type": "address"
        },
        {
          "name": "fixtureId",
          "type": "uint256"
        },
        {
          "name": "hostBet",
          "type": "uint256"
        },
        {
          "name": "maxTotal",
          "type": "uint256"
        },
        {
          "name": "total",
          "type": "uint256"
        },
        {
          "name": "unlikelyOutcome",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "queryBetValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_fixtureId",
          "type": "uint256"
        }
      ],
      "name": "FixtureOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_externalId",
          "type": "string"
        },
        {
          "name": "_closedAt",
          "type": "uint256"
        },
        {
          "name": "_endedAt",
          "type": "uint256"
        }
      ],
      "name": "createFixture",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610df6806100536000396000f3006080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680625b4487146100b35780634a6ae72f146100de5780636103d70b1461016f57806367bfef67146101865780637cbdc001146102525780638790af3e146102d45780638da5cb5b14610339578063ac4afa3814610390578063e2982c2114610426578063e6bae1ec1461047d578063f2fde38b146104de575b600080fd5b3480156100bf57600080fd5b506100c8610521565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610159600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919080359060200190929190505050610527565b6040518082815260200191505060405180910390f35b34801561017b57600080fd5b506101846106b7565b005b34801561019257600080fd5b506101b1600480360381019080803590602001909291905050506107d6565b60405180868152602001858152602001806020018460ff1660ff16815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b838110156102135780820151818401526020810190506101f8565b50505050905090810190601f1680156102405780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561025e57600080fd5b5061027d600480360381019080803590602001909291905050506108cd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102c05780820151818401526020810190506102a5565b505050509050019250505060405180910390f35b3480156102e057600080fd5b5061031f60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610981565b604051808215151515815260200191505060405180910390f35b34801561034557600080fd5b5061034e6109fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039c57600080fd5b506103bb60048036038101908080359060200190929190505050610a20565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018260ff1660ff168152602001965050505050505060405180910390f35b34801561043257600080fd5b50610467600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a98565b6040518082815260200191505060405180910390f35b34801561048957600080fd5b506104c860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab0565b6040518082815260200191505060405180910390f35b3480156104ea57600080fd5b5061051f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b005b60025481565b6000610531610cf0565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058e57600080fd5b848411151561059c57600080fd5b60a060405190810160405280868152602001858152602001878152602001600060ff1681526020016000151581525091506001600383908060018154018082558091505090600182039060005260206000209060040201600090919290919091506000820151816000015560208201518160010155604082015181600201908051906020019061062d929190610d25565b5060608201518160030160006101000a81548160ff021916908360ff16021790555060808201518160030160016101000a81548160ff02191690831515021790555050500390507f8d293449f88091e84b3c37081ea356981776b935bf4b118c7a7126a2782c76a8816040518082815260200191505060405180910390a180925050509392505050565b600080339150600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415151561070f57600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561073557600080fd5b61074a81600254610cd790919063ffffffff16565b6002819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156107d257fe5b5050565b6003818154811015156107e557fe5b9060005260206000209060040201600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561089d5780601f106108725761010080835404028352916020019161089d565b820191906000526020600020905b81548152906001019060200180831161088057829003601f168201915b5050505050908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b606060006004838154811015156108e057fe5b906000526020600020906009020190508060020180548060200260200160405190810160405280929190818152602001828054801561097457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161092a575b5050505050915050919050565b60008060048481548110151561099357fe5b906000526020600020906009020190508060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481101515610a2f57fe5b90600052602060002090600902016000915090508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff16905086565b60016020528060005260406000206000915090505481565b600080600484815481101515610ac257fe5b906000526020600020906009020190508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b365780600501549150610b7b565b8060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505b5092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bdd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610c1957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211151515610ce557fe5b818303905092915050565b60a060405190810160405280600081526020016000815260200160608152602001600060ff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d6657805160ff1916838001178555610d94565b82800160010185558215610d94579182015b82811115610d93578251825591602001919060010190610d78565b5b509050610da19190610da5565b5090565b610dc791905b80821115610dc3576000816000905550600101610dab565b5090565b905600a165627a7a72305820701834de7b566c69c9bad569ba1412ebe9b3ea487396d4ab8b7132c30d7025940029",
  "deployedBytecode": "0x6080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680625b4487146100b35780634a6ae72f146100de5780636103d70b1461016f57806367bfef67146101865780637cbdc001146102525780638790af3e146102d45780638da5cb5b14610339578063ac4afa3814610390578063e2982c2114610426578063e6bae1ec1461047d578063f2fde38b146104de575b600080fd5b3480156100bf57600080fd5b506100c8610521565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610159600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919080359060200190929190505050610527565b6040518082815260200191505060405180910390f35b34801561017b57600080fd5b506101846106b7565b005b34801561019257600080fd5b506101b1600480360381019080803590602001909291905050506107d6565b60405180868152602001858152602001806020018460ff1660ff16815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b838110156102135780820151818401526020810190506101f8565b50505050905090810190601f1680156102405780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561025e57600080fd5b5061027d600480360381019080803590602001909291905050506108cd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102c05780820151818401526020810190506102a5565b505050509050019250505060405180910390f35b3480156102e057600080fd5b5061031f60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610981565b604051808215151515815260200191505060405180910390f35b34801561034557600080fd5b5061034e6109fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039c57600080fd5b506103bb60048036038101908080359060200190929190505050610a20565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018260ff1660ff168152602001965050505050505060405180910390f35b34801561043257600080fd5b50610467600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a98565b6040518082815260200191505060405180910390f35b34801561048957600080fd5b506104c860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab0565b6040518082815260200191505060405180910390f35b3480156104ea57600080fd5b5061051f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b005b60025481565b6000610531610cf0565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058e57600080fd5b848411151561059c57600080fd5b60a060405190810160405280868152602001858152602001878152602001600060ff1681526020016000151581525091506001600383908060018154018082558091505090600182039060005260206000209060040201600090919290919091506000820151816000015560208201518160010155604082015181600201908051906020019061062d929190610d25565b5060608201518160030160006101000a81548160ff021916908360ff16021790555060808201518160030160016101000a81548160ff02191690831515021790555050500390507f8d293449f88091e84b3c37081ea356981776b935bf4b118c7a7126a2782c76a8816040518082815260200191505060405180910390a180925050509392505050565b600080339150600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415151561070f57600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561073557600080fd5b61074a81600254610cd790919063ffffffff16565b6002819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156107d257fe5b5050565b6003818154811015156107e557fe5b9060005260206000209060040201600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561089d5780601f106108725761010080835404028352916020019161089d565b820191906000526020600020905b81548152906001019060200180831161088057829003601f168201915b5050505050908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b606060006004838154811015156108e057fe5b906000526020600020906009020190508060020180548060200260200160405190810160405280929190818152602001828054801561097457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161092a575b5050505050915050919050565b60008060048481548110151561099357fe5b906000526020600020906009020190508060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481101515610a2f57fe5b90600052602060002090600902016000915090508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff16905086565b60016020528060005260406000206000915090505481565b600080600484815481101515610ac257fe5b906000526020600020906009020190508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b365780600501549150610b7b565b8060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505b5092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bdd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610c1957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211151515610ce557fe5b818303905092915050565b60a060405190810160405280600081526020016000815260200160608152602001600060ff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d6657805160ff1916838001178555610d94565b82800160010185558215610d94579182015b82811115610d93578251825591602001919060010190610d78565b5b509050610da19190610da5565b5090565b610dc791905b80821115610dc3576000816000905550600101610dab565b5090565b905600a165627a7a72305820701834de7b566c69c9bad569ba1412ebe9b3ea487396d4ab8b7132c30d7025940029",
  "sourceMap": "201:1659:3:-;;;502:10:7;494:5;;:18;;;;;;;;;;;;;;;;;;201:1659:3;;;;;;",
  "deployedSourceMap": "201:1659:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:28:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:28:8;;;;;;;;;;;;;;;;;;;;;;;750:1108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;750:1108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:285:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:285:8;;;;;;3035:25:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3035:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3035:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5162:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5162:183:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5162:183:1;;;;;;;;;;;;;;;;;4783:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4783:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;3127:19:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3127:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:43:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:43:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4286:278:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4286:278:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:169:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:169:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:28:8;;;;:::o;750:1108:3:-;879:7;1331:25;;:::i;:::-;1668:20;647:5:7;;;;;;;;;;;633:19;;:10;:19;;;625:28;;;;;;;;1118:9:3;1107:8;:20;1099:29;;;;;;;;1359:240;;;;;;;;;1391:9;1359:240;;;;1423:8;1359:240;;;;1457:11;1359:240;;;;1490:1;1359:240;;;;;;1543:5;1359:240;;;;;1331:268;;1719:1;1691:8;1705:10;1691:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1691:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;1668:52;;1794:27;1808:12;1794:27;;;;;;;;;;;;;;;;;;1839:12;1832:19;;750:1108;;;;;;;:::o;769:285:8:-;810:13;842:15;826:10;810:26;;860:8;:15;869:5;860:15;;;;;;;;;;;;;;;;842:33;;901:1;890:7;:12;;882:21;;;;;;;;933:7;917:4;:12;;;:23;;909:32;;;;;;;;964:26;982:7;964:13;;:17;;:26;;;;:::i;:::-;948:13;:42;;;;1014:1;996:8;:15;1005:5;996:15;;;;;;;;;;;;;;;:19;;;;1029:5;:10;;:19;1040:7;1029:19;;;;;;;;;;;;;;;;;;;;;;;1022:27;;;;;;769:285;;:::o;3035:25:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5162:183::-;5250:9;5275:17;5295:5;5301:7;5295:14;;;;;;;;;;;;;;;;;;;;5275:34;;5326:4;:12;;5319:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5162:183;;;;:::o;4783:207::-;4891:4;4911:17;4931:5;4937:7;4931:14;;;;;;;;;;;;;;;;;;;;4911:34;;4962:4;:12;;:21;4975:7;4962:21;;;;;;;;;;;;;;;;;;;;;;;;;4955:28;;4783:207;;;;;:::o;238:20:7:-;;;;;;;;;;;;;:::o;3127:19:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;274:43:8:-;;;;;;;;;;;;;;;;;:::o;4286:278:1:-;4392:7;4415:17;4435:5;4441:7;4435:14;;;;;;;;;;;;;;;;;;;;4415:34;;4474:4;:9;;;;;;;;;;;;4463:20;;:7;:20;;;4459:57;;;4504:4;:12;;;4497:19;;;;4459:57;4533:4;:15;;:24;4549:7;4533:24;;;;;;;;;;;;;;;;4526:31;;4286:278;;;;;;:::o;827:169:7:-;647:5;;;;;;;;;;;633:19;;:10;:19;;;625:28;;;;;;;;923:1;903:22;;:8;:22;;;;895:31;;;;;;;;960:8;932:37;;953:5;;;;;;;;;;;932:37;;;;;;;;;;;;983:8;975:5;;:16;;;;;;;;;;;;;;;;;;827:169;:::o;562:114:6:-;624:7;651:1;646;:6;;639:14;;;;;;670:1;666;:5;659:12;;562:114;;;;:::o;201:1659:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\n\nimport \"./WolsukiBase.sol\";\n\n\n/// @title Factory Contract for GateKeeper. Holds all functions related to opening a new fixture.\n/// @author Wolsuki (https://www.pulsuki.com)\ncontract WolsukiFactory is WolsukiBase {\n\n    /// @dev The FixtureOpened event is emitted whenever a new fixture is created.\n    event FixtureOpened(uint256 _fixtureId);\n\n\n    /// @dev only owner can call this function. When a new fixture is created, its\n    /// ended variable is set to false, which means the fixture is opened.\n    /// @param _externalId id of the fixture on FIFA website.\n    /// This is used to make request to FIFA's fixture page to fetch result.\n    /// @return index of newly opened / created fixture in the fixture list\n    function createFixture(string _externalId, uint256 _closedAt, uint256 _endedAt)\n        public\n        onlyOwner\n        returns(uint256)\n    {\n        // Fixture should be closed before it is ended. That means no pools are allowed\n        // to be created and no players are allowed to place bets before the fixture is\n        // on going.\n        require(_endedAt > _closedAt);\n\n        // @dev the default status is 0 but this does not matter as long as the fixture is opened.\n        // One should always check if the fixture is ended to know that the status is final.\n        Fixture memory newFixture = Fixture({\n            closedAt: _closedAt,\n            endedAt: _endedAt,\n            externalId: _externalId,\n            status: 0, // the outcome by default is 0\n            ended: false // the pool is opened when it's created\n        });\n\n        // adds newly created fixture to the fixture list\n        uint256 newFixtureId = fixtures.push(newFixture) - 1;\n\n        // emit the fixture opened event with the fixture's id\n        FixtureOpened(newFixtureId);\n\n        return newFixtureId;\n    }\n}\n",
  "sourcePath": "/Applications/MAMP/htdocs/WolsukiContract/contracts/WolsukiFactory.sol",
  "ast": {
    "absolutePath": "/Applications/MAMP/htdocs/WolsukiContract/contracts/WolsukiFactory.sol",
    "exportedSymbols": {
      "WolsukiFactory": [
        699
      ]
    },
    "id": 700,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 646,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Applications/MAMP/htdocs/WolsukiContract/contracts/WolsukiBase.sol",
        "file": "./WolsukiBase.sol",
        "id": 647,
        "nodeType": "ImportDirective",
        "scope": 700,
        "sourceUnit": 207,
        "src": "27:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 648,
              "name": "WolsukiBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 206,
              "src": "228:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WolsukiBase_$206",
                "typeString": "contract WolsukiBase"
              }
            },
            "id": 649,
            "nodeType": "InheritanceSpecifier",
            "src": "228:11:3"
          }
        ],
        "contractDependencies": [
          206,
          6939,
          7026
        ],
        "contractKind": "contract",
        "documentation": "@title Factory Contract for GateKeeper. Holds all functions related to opening a new fixture.\n @author Wolsuki (https://www.pulsuki.com)",
        "fullyImplemented": true,
        "id": 699,
        "linearizedBaseContracts": [
          699,
          206,
          7026,
          6939
        ],
        "name": "WolsukiFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev The FixtureOpened event is emitted whenever a new fixture is created.",
            "id": 653,
            "name": "FixtureOpened",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "indexed": false,
                  "name": "_fixtureId",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "350:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "349:20:3"
            },
            "src": "330:40:3"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "892:966:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 667,
                          "name": "_endedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "1107:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 668,
                          "name": "_closedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "1118:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1107:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7044,
                        7045
                      ],
                      "referencedDeclaration": 7044,
                      "src": "1099:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:29:3"
                },
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "name": "newFixture",
                      "nodeType": "VariableDeclaration",
                      "scope": 698,
                      "src": "1331:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fixture_$99_memory_ptr",
                        "typeString": "struct WolsukiBase.Fixture"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 672,
                        "name": "Fixture",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 99,
                        "src": "1331:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fixture_$99_storage_ptr",
                          "typeString": "struct WolsukiBase.Fixture"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 675,
                        "name": "_closedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "1391:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "_endedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "1423:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 677,
                        "name": "_externalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "1457:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1490:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 674,
                      "name": "Fixture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1359:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Fixture_$99_storage_ptr_$",
                        "typeString": "type(struct WolsukiBase.Fixture storage pointer)"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "closedAt",
                      "endedAt",
                      "externalId",
                      "status",
                      "ended"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1359:240:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fixture_$99_memory",
                      "typeString": "struct WolsukiBase.Fixture memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1331:268:3"
                },
                {
                  "assignments": [
                    683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "name": "newFixtureId",
                      "nodeType": "VariableDeclaration",
                      "scope": 698,
                      "src": "1668:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "newFixture",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 673,
                          "src": "1705:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fixture_$99_memory_ptr",
                            "typeString": "struct WolsukiBase.Fixture memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fixture_$99_memory_ptr",
                            "typeString": "struct WolsukiBase.Fixture memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "fixtures",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1691:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fixture_$99_storage_$dyn_storage",
                            "typeString": "struct WolsukiBase.Fixture storage ref[] storage ref"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1691:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Fixture_$99_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct WolsukiBase.Fixture storage ref) returns (uint256)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1691:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1719:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1691:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1668:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 692,
                        "name": "newFixtureId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1808:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 691,
                      "name": "FixtureOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "1794:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 695,
                    "name": "newFixtureId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 683,
                    "src": "1839:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 665,
                  "id": 696,
                  "nodeType": "Return",
                  "src": "1832:19:3"
                }
              ]
            },
            "documentation": "@dev only owner can call this function. When a new fixture is created, its\n ended variable is set to false, which means the fixture is opened.\n @param _externalId id of the fixture on FIFA website.\n This is used to make request to FIFA's fixture page to fetch result.\n @return index of newly opened / created fixture in the fixture list",
            "id": 698,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 662,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 661,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6913,
                  "src": "853:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "853:9:3"
              }
            ],
            "name": "createFixture",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "_externalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "773:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "name": "_closedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "793:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "name": "_endedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "812:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "772:57:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "879:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "878:9:3"
            },
            "scope": 699,
            "src": "750:1108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 700,
        "src": "201:1659:3"
      }
    ],
    "src": "0:1861:3"
  },
  "legacyAST": {
    "absolutePath": "/Applications/MAMP/htdocs/WolsukiContract/contracts/WolsukiFactory.sol",
    "exportedSymbols": {
      "WolsukiFactory": [
        699
      ]
    },
    "id": 700,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 646,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Applications/MAMP/htdocs/WolsukiContract/contracts/WolsukiBase.sol",
        "file": "./WolsukiBase.sol",
        "id": 647,
        "nodeType": "ImportDirective",
        "scope": 700,
        "sourceUnit": 207,
        "src": "27:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 648,
              "name": "WolsukiBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 206,
              "src": "228:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WolsukiBase_$206",
                "typeString": "contract WolsukiBase"
              }
            },
            "id": 649,
            "nodeType": "InheritanceSpecifier",
            "src": "228:11:3"
          }
        ],
        "contractDependencies": [
          206,
          6939,
          7026
        ],
        "contractKind": "contract",
        "documentation": "@title Factory Contract for GateKeeper. Holds all functions related to opening a new fixture.\n @author Wolsuki (https://www.pulsuki.com)",
        "fullyImplemented": true,
        "id": 699,
        "linearizedBaseContracts": [
          699,
          206,
          7026,
          6939
        ],
        "name": "WolsukiFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev The FixtureOpened event is emitted whenever a new fixture is created.",
            "id": 653,
            "name": "FixtureOpened",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "indexed": false,
                  "name": "_fixtureId",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "350:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "349:20:3"
            },
            "src": "330:40:3"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "892:966:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 667,
                          "name": "_endedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "1107:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 668,
                          "name": "_closedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "1118:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1107:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7044,
                        7045
                      ],
                      "referencedDeclaration": 7044,
                      "src": "1099:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:29:3"
                },
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "name": "newFixture",
                      "nodeType": "VariableDeclaration",
                      "scope": 698,
                      "src": "1331:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fixture_$99_memory_ptr",
                        "typeString": "struct WolsukiBase.Fixture"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 672,
                        "name": "Fixture",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 99,
                        "src": "1331:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fixture_$99_storage_ptr",
                          "typeString": "struct WolsukiBase.Fixture"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 675,
                        "name": "_closedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "1391:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "_endedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "1423:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 677,
                        "name": "_externalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "1457:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1490:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 674,
                      "name": "Fixture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1359:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Fixture_$99_storage_ptr_$",
                        "typeString": "type(struct WolsukiBase.Fixture storage pointer)"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "closedAt",
                      "endedAt",
                      "externalId",
                      "status",
                      "ended"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1359:240:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fixture_$99_memory",
                      "typeString": "struct WolsukiBase.Fixture memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1331:268:3"
                },
                {
                  "assignments": [
                    683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "name": "newFixtureId",
                      "nodeType": "VariableDeclaration",
                      "scope": 698,
                      "src": "1668:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "newFixture",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 673,
                          "src": "1705:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fixture_$99_memory_ptr",
                            "typeString": "struct WolsukiBase.Fixture memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fixture_$99_memory_ptr",
                            "typeString": "struct WolsukiBase.Fixture memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "fixtures",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1691:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fixture_$99_storage_$dyn_storage",
                            "typeString": "struct WolsukiBase.Fixture storage ref[] storage ref"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1691:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Fixture_$99_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct WolsukiBase.Fixture storage ref) returns (uint256)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1691:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1719:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1691:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1668:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 692,
                        "name": "newFixtureId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1808:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 691,
                      "name": "FixtureOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "1794:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 695,
                    "name": "newFixtureId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 683,
                    "src": "1839:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 665,
                  "id": 696,
                  "nodeType": "Return",
                  "src": "1832:19:3"
                }
              ]
            },
            "documentation": "@dev only owner can call this function. When a new fixture is created, its\n ended variable is set to false, which means the fixture is opened.\n @param _externalId id of the fixture on FIFA website.\n This is used to make request to FIFA's fixture page to fetch result.\n @return index of newly opened / created fixture in the fixture list",
            "id": 698,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 662,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 661,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6913,
                  "src": "853:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "853:9:3"
              }
            ],
            "name": "createFixture",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "_externalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "773:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "name": "_closedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "793:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "name": "_endedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "812:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "772:57:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "879:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "878:9:3"
            },
            "scope": 699,
            "src": "750:1108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 700,
        "src": "201:1659:3"
      }
    ],
    "src": "0:1861:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-21T05:10:42.950Z"
}